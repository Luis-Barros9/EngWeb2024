var http  = require('http')
var url = require('url')
var fs  = require('fs')
const axios = require('axios'); // Import the axios library
const { error } = require('console');


const heading = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Filmes Americanos</title>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Allerta+Stencil">
    <style>
    .w3-allerta {
      font-family: "Allerta Stencil", Sans-serif;
    }
    </style>
</head>
`

const footer = `
        <footer class="w3-container w3-black">
          <h5>Generated by Luis Barros</h5>
        </footer>
        
    </div>
</body>
</html>
`
function geraListaAtores(atores){
    // recebe uma lista de géneros em formato json e devolve um html dos mesmos de forma de uma tabela com links para um género em específico
    let pagHTML = heading
    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
                <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
                <a href="http://localhost:8080">Voltar</a>
            </h3>
              <h1 class = "w3-center w3-allerta">Lista de Atores</h1>
            </header>
            
            <div class="w3-container">
                <table class="w3-table w3-striped">
                    <tr>
                        <th>Id</th>
                        <th>Nome</th>
                    </tr>
    `
    atores.forEach( ator => {
        pagHTML += `
        <tr>
            <td><a href ="http://localhost:8080/atores/${ator.id}">${ator.id}</a></td>
            <td>${ator.nome}</td>

        </tr>
        `
    });
    pagHTML += "</table></div>"
    pagHTML += footer
    return pagHTML
}



function geraListaGeneros(generos){
    // recebe uma lista de géneros em formato json e devolve um html dos mesmos de forma de uma tabela com links para um género em específico
    let pagHTML = heading
    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
                <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
                <a href="http://localhost:8080">Voltar</a>
            </h3>
              <h1 class = "w3-center w3-allerta">Lista de Géneros</h1>
            </header>
            
            <div class="w3-container">
                <table class="w3-table w3-striped">
                    <tr>
                        <th>Id</th>
                        <th>Designação</th>
                    </tr>
    `
    generos.forEach( genero => {
        pagHTML += `
        <tr>
            <td><a href ="http://localhost:8080/generos/${genero.id}">${genero.id}</a></td>
            <td>${genero.designacao}</td>

        </tr>
        `
    });
    pagHTML += "</table></div>"

    pagHTML += footer
    return pagHTML
}

async function getAtoresListItems(ids){
    console.log(ids)
    if (ids.length == 0) 
        return ''

    result = ''
    const response = await axios.get(`http://localhost:3000/Atores`);
    response.data.filter(elemento => ids.includes(elemento.id)).forEach(ator => {
        result += `
        <li><a href = "http://localhost:8080/atores/${ator.id}">${ator.nome}</a></li>
        `})


    return result
}

async function getGenerosListItems(ids){
    console.log(ids)
    if (ids.length == 0) 
        return ''

    result = ''
    const response = await axios.get(`http://localhost:3000/Generos`);
    response.data.filter(elemento => ids.includes(elemento.id)).forEach(genero => {
        result += `
        <li><a href = "http://localhost:8080/generos/${genero.id}">${genero.designacao}</a></li>
        `})


    return result
}

function geraListaFilmes(filmes){
    // recebe uma lista de filmes em formato json e devolve um html dos mesmos de forma de uma tabela com links para os filmes
    let pagHTML = heading
    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
                <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
                <a href="http://localhost:8080">Voltar</a>
            </h3>
              <h1 class = "w3-center w3-allerta">Lista de Filmes</h1>
            </header>
            
            <div class="w3-container">
                <table class="w3-table w3-striped">
                    <tr>
                        <th>Id</th>
                        <th>Title</th>
                        <th>Year</th>
                    </tr>
    `
    filmes.forEach( filme => {
        pagHTML += `
        <tr>
            <td><a href ="http://localhost:8080/filmes/${filme.id}">${filme._id}</td>
            <td>${filme.title}</a></td>
            <td>${filme.year}</td>
        </tr>
        `
    });
    pagHTML += "</table></div>"

    pagHTML += footer
    return pagHTML
}


async function geraPagFilme(filme){
    let pagHTML = heading

    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
            <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
            <a href="http://localhost:8080/filmes">Voltar</a>
        </h3>
            <h1 class = "w3-center w3-allerta">Lista de Géneros</h1>
        </header>
    `
    pagHTML += `
                <p>O filme ${filme.title} de ${filme.year} possuí no elenco os seguintes atores:</p>
                <h2 class = "w3-allerta">Elenco</h2>
                <div>
                    <ul class ="w3-ul w3-card-4">`
    
    var response = await getAtoresListItems(filme.cast)
    pagHTML += response
    pagHTML += '</ul></div>'
    pagHTML += `<h2 class = "w3-allerta">Géneros</h2>
    <div>
    <ul class ="w3-ul w3-card-4">`

    response = await getGenerosListItems(filme.genres)
    pagHTML += response

    pagHTML += '</ul></div>'

    pagHTML += footer
    return pagHTML
}


async function getFilmesByGeneros(genero){
    let result = ''
    const response = await axios.get('http://localhost:3000/Filmes');
    response.data.filter(filme => filme.genres.includes(genero.id)).forEach(filme => {
        result += `
        <li><a href="http://localhost:8080/filmes/${filme.id}">${filme.title} (${filme.year})</a></li>
        `
    })
    console.log(result)
    return result
}

async function getFilmesByAtor(ator){
    let result = ''
    const response = await axios.get('http://localhost:3000/Filmes');
    response.data.filter(filme => filme.cast.includes(ator.id)).forEach(filme => {
        result += `
        <li><a href="http://localhost:8080/filmes/${filme.id}">${filme.title} (${filme.year})</a></li>
        `
    })
    console.log(result)
    return result
}

async function geraPagGenero(genero){
    let pagHTML = heading

    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
                <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
                <a href="http://localhost:8080/generos">Voltar</a>
            </h3>
              <h1 class = "w3-center w3-allerta">${genero.designacao}</h1>
            </header>
    `
    pagHTML += `
                <p>Para quem gosta de ${genero.designacao} pode assistir aos seguintes filmes:</p>
                <h2 class = "w3-allerta">Filmes</h2>
                <div>
                    <ul class ="w3-ul w3-card-4">`

    response = await getFilmesByGeneros(genero)
    pagHTML += response
    pagHTML += '</ul></div>'

    pagHTML += footer
    return pagHTML
}



async function geraPagAtor(ator){
    let pagHTML = heading

    pagHTML += `
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-black">
                <h3 class = "w3-left w3-margin-left w3-allerta w3-button w3-white w3-round-large">
                <a href="http://localhost:8080/atores">Voltar</a>
            </h3>
              <h1 class = "w3-center w3-allerta">${ator.nome}</h1>
            </header>
    `
    pagHTML += `
                <p>"${ator.nome} participou nos seguintes filmes:"</p>
                <h2 class = "w3-allerta">Filmes</h2>
                <div>
                    <ul class ="w3-ul w3-card-4">`

    pagHTML += await getFilmesByAtor(ator)
    pagHTML += '</ul></div>'

    pagHTML += footer
    return pagHTML
}


http.createServer(function (req, res) {
    console.log(req.method + " " + req.url)

    if (req.url == '/') {
        fs.readFile('homepage.html', function(err, data) {
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(data)
            res.end()
        })
    }
    else if(req.url == '/filmes'){
        console.log('entrou')
        axios.get('http://localhost:3000/Filmes').
        then( response => {
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(geraListaFilmes(response.data))
            res.end()
        }).catch(erro => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p> Erro: não consegui obter a lista de filmes...' + erro + '</p>')
            res.end()
        })
    }
    else if (req.url.match(/\/filmes\/\w+/))
    {

        let id = req.url.substring(8)

        axios.get('http://localhost:3000/Filmes/'+id).
        then((resp) => {
            var data = resp.data
            geraPagFilme(data).then(pagHTML => {

                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
                res.write(pagHTML)

            res.end()
        }).catch(error => {
                res.writeHead(507, {'Content-Type': 'text/html; charset=utf-8'})
                console.log("ERRO: " + error)
                res.write("<p> Erro a gerar a página do filme: "+error + "<p>")
                res.end()})
        })
        .catch(error => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            console.log("Erro a obter informações sobre o filme: " + error)
            res.write("<p>"+error + "<p>")
            res.end()
        })

    }
    else if (req.url.match(/\/atores\/a\w+/))
    {

        let id = req.url.substring(8)
        axios.get(`http://localhost:3000/Atores/${id}`).
        then((resp) => 
        {
            console.log("tou aqui")
            const data = resp.data
            geraPagAtor(data).then(pagHTML => {

                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
                res.write(pagHTML)

            res.end()
            })
            .catch(error => {
                    res.writeHead(507, {'Content-Type': 'text/html; charset=utf-8'})
                    console.log("ERRO: " + error)
                    res.write("<p> Erro a gerar a página do ator: "+error + "<p>")
                    res.end()})
        })
        .catch(error => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            console.log("ERRO: " + error)
            res.write("<p>"+error + "<p>")
            res.end()
        })
    }
    else if(req.url == '/atores'){
        console.log('entrou')
        axios.get('http://localhost:3000/Atores').
        then( response => {
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(geraListaAtores(response.data))
            res.end()
        }).catch(erro => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p> Erro: não consegui obter a lista de atores...' + erro + '</p>')
            res.end()
        })
    }
    else if(req.url == '/generos'){
        console.log('entrou')
        axios.get('http://localhost:3000/Generos').
        then( response => {
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(geraListaGeneros(response.data))
            res.end()
        }).catch(erro => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p> Erro: não consegui obter a lista de géneros...' + erro + '</p>')
            res.end()
        })
    }
    else if (req.url.match(/\/generos\/g\w+/))
    {

        let id = req.url.substring(8)

        axios.get('http://localhost:3000/Generos'+id).
        then((resp) => {
            var data = resp.data
            geraPagGenero(data).then(pagHTML => {

                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
                res.write(pagHTML)

            res.end()
            }).catch(error => {
                    res.writeHead(507, {'Content-Type': 'text/html; charset=utf-8'})
                    console.log("ERRO: " + error)
                    res.write("<p> Erro a gerar a página do filme: "+error + "<p>")
                    res.end()})
        })
        .catch(error => {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            console.log("ERRO: " + error)
            res.write("<p>"+error + "<p>")
            res.end()
        })

    }
    else if (req.url == '/w3.css') {
        fs .readFile('../../sem4/w3.css', function(err, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html'})
        res.write('<p> Erro: pedido não suportado </p>')
        res.write('<pre>' + req.url +'</pre>')
        res.end()
    }
    

}).listen(8080)

console.log('link: http://localhost:8080')